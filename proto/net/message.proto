syntax = "proto3";

package net;

option go_package = "github.com/adrenochain/adrenochain/pkg/proto/net";

// Block header information
message BlockHeader {
  uint32 version = 1;
  bytes prev_block_hash = 2;
  bytes merkle_root = 3;
  int64 timestamp = 4;
  uint64 difficulty = 5;
  uint64 nonce = 6;
  uint64 height = 7;
  bytes hash = 8;
}

// Request for block headers
message BlockHeadersRequest {
  uint64 start_height = 1;
  uint64 count = 2;
  bytes stop_hash = 3;
}

// Response containing block headers
message BlockHeadersResponse {
  repeated BlockHeader headers = 1;
  bool has_more = 2;
}

// Request for a specific block
message BlockRequest {
  bytes block_hash = 1;
  uint64 height = 2;
}

// Response containing block data
message BlockResponse {
  bool found = 1;
  bytes block_data = 2;
}

// Initial sync request
message SyncRequest {
  uint64 current_height = 1;
  bytes best_block_hash = 2;
  repeated bytes known_headers = 3;
}

// Initial sync response
message SyncResponse {
  uint64 best_height = 1;
  bytes best_block_hash = 2;
  repeated BlockHeader headers = 3;
  bool needs_sync = 4;
}

// State synchronization request
message StateRequest {
  bytes state_root = 1;
  repeated bytes account_hashes = 2;
}

// State synchronization response
message StateResponse {
  bytes state_root = 1;
  map<string, bytes> account_states = 2;
  bool has_more = 3;
}

// Specific message types for different content
message BlockMessage {
  bytes block_data = 1;
}

message TransactionMessage {
  bytes transaction_data = 1;
}

// Message represents a generic network message
message Message {
  int64 timestamp_unix_nano = 1;
  bytes from_peer_id = 2;

  // Use oneof to ensure only one type of content is present
  oneof content {
    BlockMessage block_message = 3;
    TransactionMessage transaction_message = 4;
    BlockHeadersRequest headers_request = 10;
    BlockHeadersResponse headers_response = 11;
    BlockRequest block_request = 12;
    BlockResponse block_response = 13;
    SyncRequest sync_request = 14;
    SyncResponse sync_response = 15;
    StateRequest state_request = 16;
    StateResponse state_response = 17;
  }
  bytes signature = 5;
}